{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","audio","video","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","VideoPlayer","useContext","Grid","container","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","ref","controls","autoPlay","console","log","Notifications","style","display","justifyContent","Button","color","onClick","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","event","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","useStyles","makeStyles","theme","appBar","borderRadius","margin","flexDirection","alignItems","width","border","breakpoints","down","image","marginLeft","wrapper","App","classes","className","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29995ec9.chunk.js","sourcesContent":["import React, {createContext, useState, useRef, useEffect} from 'react';\nimport {io} from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\nconst socket = io('https://blabber-video-chat.herokuapp.com/');\n\n\nconst ContextProvider = ({children}) => {\n\n    const [stream, setStream] = useState(null);\n    const [me, setMe] = useState('');\n    const [call, setCall] = useState('');\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [name, setName] = useState('');\n\n    const myVideo = useRef();\n    const userVideo = useRef();\n    const connectionRef = useRef();\n\n    useEffect(()=>{\n        navigator.mediaDevices.getUserMedia({\n            audio: true, video: true\n        }).then((currentStream)=>{\n            setStream(currentStream);\n            myVideo.current.srcObject = currentStream;\n        });\n\n        socket.on('me', (id)=>setMe(id));\n\n        socket.on('calluser', ({from, name: callerName, signal})=>{\n            setCall({isReceivedCall: true, from, name: callerName, signal})\n        });\n\n    }, []);\n\n    const answerCall = () => {\n        setCallAccepted(true);\n\n        const peer = new Peer({initiator: false, trickle: false, stream});\n\n        peer.on('signal', (data)=>{\n            socket.emit('answercall', {signal: data, to: call.from});\n        });\n\n        peer.on('stream', (currentStream)=>{\n            userVideo.current.srcObject = currentStream;\n        });\n\n        peer.signal(call.signal);\n        connectionRef.current = peer;\n    }\n\n    const callUser = (id) => {\n        const peer = new Peer({initiator: true, trickle: false, stream});\n\n        peer.on('signal', (data)=>{\n            socket.emit('calluser', {userToCall: id, signalData: data, from: me, name});\n        });\n\n        peer.on('stream', (currentStream)=>{\n            userVideo.current.srcObject = currentStream;\n        });\n        socket.on('callaccepted', (signal)=>{\n            setCallAccepted(true);\n            peer.signal(signal);\n        });\n\n        connectionRef.current = peer;\n    }\n\n    const leaveCall = () => {\n        setCallEnded(true);\n        connectionRef.current.destroy();\n        window.location.reload();\n    }\n\n    return (\n        <SocketContext.Provider value={{\n            call,\n            callAccepted,\n            myVideo,\n            userVideo,\n            stream,\n            name,\n            setName,\n            callEnded,\n            me,\n            callUser,\n            leaveCall,\n            answerCall\n        }}>\n            {children}\n        </SocketContext.Provider>\n    )\n}\n\nexport {ContextProvider, SocketContext};","import React, {useContext} from 'react';\nimport {Grid, Typography, Paper} from '@material-ui/core';\n// import {makeStyles} from '@material-ui/core/styles';\nimport {SocketContext} from '../SocketContext';\n\nconst VideoPlayer = () => {\n    const {name, callAccepted, myVideo, userVideo, callEnded, stream, call} = useContext(SocketContext);\n    // const classes = useStyles();\n    return (\n        <Grid container>\n            {/*Our own video*/}\n            {\n                stream && (\n                    <Paper>\n                        <Grid item xs={12} md={6}>\n                            <Typography variant='h5' gutterBottom>{name || 'Name'}</Typography>\n                            <video playsInline ref={myVideo} controls autoPlay></video>\n                        </Grid>\n                    </Paper>\n                )\n            }\n            {/*User's video*/}\n            {\n                callAccepted && !callEnded && (\n                    console.log(userVideo),\n                    <Paper>\n                        <Grid item xs={12} md={6}>\n                            <Typography variant='h5' gutterBottom>{call.name || 'Name'}</Typography>\n                            <video playsInline ref={userVideo} autoPlay></video>\n                        </Grid>\n                    </Paper>\n                )\n            }\n        </Grid>\n    )\n}\n\nexport default VideoPlayer\n","import React, {useContext} from 'react';\nimport {Button} from '@material-ui/core';\nimport {SocketContext} from '../SocketContext';\n\nconst Notifications = () => {\n\n    const {answerCall, call, callAccepted} = useContext(SocketContext);\n    return (\n        <>\n            {\n                call.isReceivedCall && !callAccepted &&(\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\n                        <h1>{call.name} is calling</h1>\n                        <Button variant='contained' color='primary' onClick={answerCall}>Answer</Button>\n                    </div>\n                )\n            }\n        </>\n    )\n}\n\nexport default Notifications\n","import React, {useContext, useState} from 'react';\nimport {Button, TextField, Grid, Typography, Container, Paper} from '@material-ui/core';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {Assignment, Phone, PhoneDisabled} from '@material-ui/icons';\nimport { SocketContext } from '../SocketContext';\n\nconst Options = ({children}) => {\n\n    const {me, callAccepted, name, setName, callEnded, leaveCall, callUser} = useContext(SocketContext);\n\n    const [idToCall, setIdToCall] = useState('');\n\n\n    return (\n        <Container>\n            <Paper elevation={10}>\n                <form noValidate autoComplete='off'>\n                    <Grid container>\n                        <Grid item xs={12} md={6}>\n                            <Typography gutterBottom variant='h6'>Account Info</Typography>\n                            <TextField label='Name' value={name} onChange={(event)=>setName(event.target.value)} fullWidth />\n                            <CopyToClipboard text={me}>\n                                <Button variant='contained' color='primary' fullWidth startIcon={<Assignment fontSize='large' />}>\n                                Copy Your ID\n                                </Button>\n                            </CopyToClipboard>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Typography gutterBottom variant='h6'>Make A Call </Typography>\n                            <TextField label='ID to Call' value={idToCall} onChange={(event)=>setIdToCall(event.target.value)} fullWidth />\n                            {\n                                callAccepted && !callEnded ? (\n                                    <Button variant='contained' color='secondary' startIcon={<PhoneDisabled fontSize='large'  onClick={leaveCall}/>}>\n                                        Hang Up\n                                    </Button>\n                                ) : (\n                                    <Button variant='contained' color='primary' startIcon={<Phone fontSize='large'  onClick={()=>callUser(idToCall)}/>}>\n                                        Call\n                                    </Button>\n                                )\n                            }\n                        </Grid>\n                    </Grid>\n                </form>\n                {children}\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Options\n","import React from 'react'\nimport { Typography , AppBar} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport VideoPlayer from './components/VideoPlayer';\nimport Notifications from './components/Notifications';\nimport Options from './components/Options';\n\nconst useStyles = makeStyles((theme)=>(\n    {\n        appBar: {\n            borderRadius: 15,\n            margin: '30px 100px',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '600px',\n            border: '2px solid black',\n\n            [theme.breakpoints.down('xs')]: {\n                width: '90%',\n            }\n        },\n        image: {\n            marginLeft: '15px',\n        },\n        wrapper: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            width: '100%',\n        },\n    }\n));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.wrapper}>\n            <AppBar className={classes.appBar} position='static' color='inherit'>\n                <Typography variant='h2' align='center'>Video Chat</Typography>\n            </AppBar>\n            <VideoPlayer />\n            <Options>\n                <Notifications />\n            </Options>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport {ContextProvider} from './SocketContext';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}